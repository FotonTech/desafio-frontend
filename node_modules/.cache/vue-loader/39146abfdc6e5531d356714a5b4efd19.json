{"remainingRequest":"/home/geffting/workspace/foton/vue/desafio-frontend/foton/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/geffting/workspace/foton/vue/desafio-frontend/foton/src/components/InputSearch.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/geffting/workspace/foton/vue/desafio-frontend/foton/src/components/InputSearch.vue","mtime":1620174440375},{"path":"/home/geffting/workspace/foton/vue/desafio-frontend/foton/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/geffting/workspace/foton/vue/desafio-frontend/foton/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/geffting/workspace/foton/vue/desafio-frontend/foton/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/geffting/workspace/foton/vue/desafio-frontend/foton/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/geffting/workspace/foton/vue/desafio-frontend/foton/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/geffting/workspace/foton/vue/desafio-frontend/foton/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouc2VhcmNoSW5wdXQgewogIHBhZGRpbmc6IDEwcHggMjBweDsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDQ4cHg7CiAgYm9yZGVyOiBub25lOwogIGJvcmRlci1yYWRpdXM6IDEwcHg7CiAgb3V0bGluZTogbm9uZTsKICBmb250LXNpemU6IDE2cHg7CiAgYmFja2dyb3VuZC1jb2xvcjogI0ZERkNGQzsKICBib3gtc2hhZG93OiA1cHggNXB4IDgwcHggcmdiYSgyMTIsIDE3MywgMTM0LCAwLjEyMjYyMyk7Cn0KCi5zZWFyY2hJbnB1dDo6cGxhY2Vob2xkZXIgewogIGNvbG9yOiAjNTQ1NjVBOwogIGZvbnQtc2l6ZTogMTZweDsKfQo="},{"version":3,"sources":["InputSearch.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"InputSearch.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <input v-model=\"searchParams\" class=\"searchInput\" placeholder=\"*icon Search book\" type=\"text\" />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'InputSearch',\n  data: () => ({\n    timeout: {}\n  }),\n  watch: {\n    searchParams() {\n      clearTimeout(this.timeout)\n      this.timeout = setTimeout(() => {\n        if (!this.searchParams) return\n        if (this.$route.name !== 'search') {\n          this.$router.push({ path: '/search' })\n        }\n        this.$store.dispatch('getBookList', this.searchParams)\n      }, 1000)\n    }\n  },\n  computed: {\n    bookList() {\n      return this.$store.getters.bookList\n    },\n    searchParams: {\n      get() {\n        return this.$store.getters.searchParams\n      },\n      set(value) {\n        this.$store.commit('SEARCH_PARAMS', value)\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.searchInput {\n  padding: 10px 20px;\n  width: 100%;\n  height: 48px;\n  border: none;\n  border-radius: 10px;\n  outline: none;\n  font-size: 16px;\n  background-color: #FDFCFC;\n  box-shadow: 5px 5px 80px rgba(212, 173, 134, 0.122623);\n}\n\n.searchInput::placeholder {\n  color: #54565A;\n  font-size: 16px;\n}\n</style>"]}]}