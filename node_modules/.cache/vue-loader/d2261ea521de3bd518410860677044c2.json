{"remainingRequest":"/home/geffting/workspace/foton/vue/desafio-frontend/foton/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/geffting/workspace/foton/vue/desafio-frontend/foton/src/pages/SearchContent.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/geffting/workspace/foton/vue/desafio-frontend/foton/src/pages/SearchContent.vue","mtime":1620181383153},{"path":"/home/geffting/workspace/foton/vue/desafio-frontend/foton/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/geffting/workspace/foton/vue/desafio-frontend/foton/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/geffting/workspace/foton/vue/desafio-frontend/foton/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/geffting/workspace/foton/vue/desafio-frontend/foton/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/geffting/workspace/foton/vue/desafio-frontend/foton/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/geffting/workspace/foton/vue/desafio-frontend/foton/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouc2VhcmNoLWNvbnRlbnQgewogIHdpZHRoOiAxMDAlOwogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC13cmFwOiB3cmFwOwogIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDsKICBnYXA6IDEwcHggMTVweDsKICBtYXJnaW4tdG9wOiA0MnB4OwoKICAuaW5maW5pdGUtbG9hZGluZy1jb250YWluZXIgewogICAgd2lkdGg6IDEwMCU7CiAgICBtYXJnaW46IDMwcHggMDsKICAgIGZvbnQtc3R5bGU6IGl0YWxpYzsKICAgIGZvbnQtc2l6ZTogMTRweDsKICB9Cn0K"},{"version":3,"sources":["SearchContent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwDA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SearchContent.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <div>\n    <div v-if=\"bookListLoading\">\n      <h2>loading</h2>\n    </div>\n    <div v-else-if=\"bookList.length === 0\">\n      <h2>vazio</h2>\n    </div>\n    <div v-else class=\"search-content content\">\n      <book-card v-for=\"(book, index) of bookList\" :key=\"index\" :book=\"book\" />\n      <br />\n      <infinite-loading spinner=\"spiral\" @infinite=\"infiniteHandler\">\n        <div slot=\"no-more\">No more books for this search</div>\n      </infinite-loading>\n    </div>\n  </div>\n</template>\n\n<script>\nimport InfiniteLoading from 'vue-infinite-loading'\nexport default {\n  name: 'SearchContent',\n  components: {\n    BookCard: () => import('@/components/BookCard.vue'),\n    InfiniteLoading\n  },\n  computed: {\n    bookList() {\n      return this.$store.getters.bookList\n    },\n    bookListLoading() {\n      return this.$store.getters.bookListLoading\n    },\n    searchParams() {\n      return this.$store.getters.searchParams\n    },\n    page: {\n      set(value) {\n        this.$store.commit('SET_PAGE', value)\n      },\n      get() {\n        return this.$store.getters.page\n      }\n    }\n  },\n  methods: {\n    async infiniteHandler(state) {\n      this.page += 1\n      await this.$store.dispatch('getBookList', this.searchParams)\n      state.loaded()\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.search-content {\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  gap: 10px 15px;\n  margin-top: 42px;\n\n  .infinite-loading-container {\n    width: 100%;\n    margin: 30px 0;\n    font-style: italic;\n    font-size: 14px;\n  }\n}\n</style>"]}]}